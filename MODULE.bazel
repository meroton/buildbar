module(name = "com_github_meroton_buildbar")

bazel_dep(name = "aspect_bazel_lib", version = "2.13.0")
bazel_dep(name = "aspect_rules_js", version = "2.2.0")
bazel_dep(name = "bazel_remote_apis")
bazel_dep(name = "com_github_buildbarn_bb_remote_execution")
bazel_dep(name = "com_github_buildbarn_bb_storage")
bazel_dep(name = "com_github_buildbarn_go_xdr")
bazel_dep(name = "gazelle", version = "0.42.0")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33")
bazel_dep(name = "protobuf", version = "29.3")
bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "rules_jsonnet", version = "0.6.0")
bazel_dep(name = "rules_oci", version = "2.2.5")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "toolchains_llvm", version = "1.3.0")

git_override(
    module_name = "bazel_remote_apis",
    commit = "536ec595e1df0064bb37aecc95332a661b8c79b2",
    remote = "https://github.com/bazelbuild/remote-apis.git",
)

git_override(
    module_name = "com_github_buildbarn_bb_remote_execution",
    commit = "1c726bdc27e7793c685d8788913f8f91f59bc887",
    remote = "https://github.com/buildbarn/bb-remote-execution.git",
)

git_override(
    module_name = "com_github_buildbarn_bb_storage",
    commit = "1d733a37487a01416bda38eff6f61eb78103c7f0",
    remote = "https://github.com/buildbarn/bb-storage.git",
)

git_override(
    module_name = "com_github_buildbarn_go_xdr",
    commit = "236788cf9e8948a1e8875c7dd243e2be180cdfd7",
    remote = "https://github.com/buildbarn/go-xdr.git",
)

single_version_override(
    module_name = "jsonnet",
    patches = ["//:patches/jsonnet/bazel-8.diff"],
)

git_override(
    module_name = "rules_antlr",
    commit = "89a29cca479363a5aee53e203719510bdc6be6ff",
    patches = [
        "//:patches/rules_antlr/antlr-4.10.diff",
        "//:patches/rules_antlr/bzlmod.diff",
    ],
    remote = "https://github.com/marcohu/rules_antlr.git",
)

single_version_override(
    module_name = "rules_go",
    patches = ["//:patches/rules_go/tags-manual.diff"],
)

single_version_override(
    module_name = "gazelle",
    patches = ["//:patches/gazelle/dont-flatten-srcs.diff"],
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "cc_mvdan_gofumpt",
    "com_github_bazelbuild_buildtools",
    "com_github_elastic_go_elasticsearch_v8",
    "com_github_kballard_go_shellquote",
    "com_github_prometheus_client_golang",
    "com_github_stretchr_testify",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_lint",
    "org_uber_go_mock",
)

go_deps_dev = use_extension("@gazelle//:extensions.bzl", "go_deps", dev_dependency = True)
go_deps_dev.gazelle_override(
    build_file_generation = "on",
    path = "github.com/cncf/xds/go",
)
go_deps_dev.module_override(
    patches = ["@com_github_buildbarn_bb_storage//:patches/com_github_grpc_ecosystem_go_grpc_prometheus/client-metrics-prevent-handled-twice.diff"],
    path = "github.com/grpc-ecosystem/go-grpc-prometheus",
)
go_deps_dev.module_override(
    patches = ["@com_github_buildbarn_bb_storage//:patches/org_golang_x_sys/o-search.diff"],
    path = "golang.org/x/sys",
)
go_deps_dev.module_override(
    patches = [
        "@com_github_buildbarn_bb_storage//:patches/org_uber_go_mock/mocks-for-funcs.diff",
        "@com_github_buildbarn_bb_remote_execution//:patches/org_uber_go_mock/generics.diff",
    ],
    path = "go.uber.org/mock",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm", dev_dependency = True)
llvm.toolchain(
    llvm_version = "14.0.0",
)
use_repo(llvm, "llvm_toolchain_llvm")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
