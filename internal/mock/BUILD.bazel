# gazelle:ignore

load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library")

gomock(
    name = "aliases",
    out = "aliases.go",
    interfaces = [
        "RoundTripper",
    ],
    library = "//internal/mock/aliases",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = ["BlobAccess"],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "completedaction",
    out = "completedaction.go",
    interfaces = ["ActionConverter"],
    library = "//pkg/completedaction",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "completedactionlogger",
    out = "completedactionlogger.go",
    interfaces = ["CompletedActionLogger_LogCompletedActionsServer"],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/proto/completedactionlogger",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "elasticsearch",
    out = "elasticsearch.go",
    interfaces = ["Uploader"],
    library = "//pkg/elasticsearch",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "storage_util",
    out = "storage_util.go",
    interfaces = [
        "ErrorLogger",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/util",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

go_library(
    name = "mock",
    srcs = [
        ":aliases.go",
        ":blobstore.go",
        ":completedaction.go",
        ":completedactionlogger.go",
        ":elasticsearch.go",
        ":storage_util.go",
    ],
    importpath = "github.com/meroton/buildbar/internal/mock",
    visibility = ["//:__subpackages__"],
    deps = [
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/completedactionlogger",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/buffer",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/slicing",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_uber_go_mock//gomock",
    ],
)
